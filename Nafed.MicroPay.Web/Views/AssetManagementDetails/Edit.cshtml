@model Nafed.MicroPay.Model.InventoryManagement
@{
    ViewBag.Title = "Asset Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card_new_header alert alert-danger">
    <div class="col-sm-6">
        NOTE : Fields marked with (*) are compulsory fields
    </div>
    <div class="col-sm-6 text-right">
        <b>@*[ Characters < > # ^ ; | $ are not allowed ]*@</b>
    </div>
</div>
@using (Html.BeginForm("Edit", "Assetmanagementdetails", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.ID);
    @Html.HiddenFor(model => model.IMID);
    @Html.HiddenFor(model => model.AssetTypeID);
    <div class="card_new_body">
        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 mb-2">

                <div class="row">
                    @Html.LabelFor(model => model.AssetTypeID, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6 col-xs-12 mb-2 required" })

                    <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12 mb-2">
                        @Html.DropDownListFor(model => model.AssetTypeID, (IEnumerable<SelectListItem>)ViewBag.AssetTypeList, "Select", new { @class = "custom-select", @id = "ddlAssetType", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.AssetTypeID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    @Html.LabelFor(model => model.IMID, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6 col-xs-12 mb-2 required" })
                    <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12 mb-2">
                        @Html.DropDownListFor(model => model.IMID, (IEnumerable<SelectListItem>)ViewBag.AssetName, "Select", new { @class = "custom-select", @id = "ddlAssetname", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.IMID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    @Html.LabelFor(model => model.EmployeeID, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6 col-xs-12 mb-2 required" })

                    <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12 mb-2">
                        @Html.DropDownListFor(model => model.EmployeeID, (IEnumerable<SelectListItem>)ViewBag.Employee,  new { @class = "custom-select" })
                        @Html.ValidationMessageFor(model => model.EmployeeID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    @Html.LabelFor(model => model.AllocationDate, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6 col-xs-12 mb-2 required" })
                    <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12 mb-2">
                        @Html.EditorFor(model => model.AllocationDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Allocation Date", max = DateTime.Now.ToString("yyyy-MM-dd"), @type = "date" } })
                        @Html.ValidationMessageFor(model => model.AllocationDate, "", new { @class = "text-danger" })

                    </div>
                </div>

                <div class="row">
                    @Html.LabelFor(model => model.DeAllocationDate, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6 col-xs-12 mb-2" })
                    <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12 mb-2">
                        @Html.EditorFor(model => model.DeAllocationDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Deallocation Date", max = DateTime.Now.ToString("yyyy-MM-dd"), @type = "date" } })
                        @Html.ValidationMessageFor(model => model.DeAllocationDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    @Html.LabelFor(model => model.StatusID, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6 col-xs-12 mb-2 required" })
                    <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12 mb-2">
                        @Html.DropDownListFor(model => model.StatusID, (IEnumerable<SelectListItem>)ViewBag.Status, new { @class = "custom-select" })
                        @Html.ValidationMessageFor(model => model.StatusID, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="divider-chevron"></div>
                <span class="pull-right">
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-light btn-md toggle-tooltip", @title = "Click here, to redirect on list page" })
                    <input type="submit" value="Create" class="btn btn-info btn-md pull-center toggle-tooltip" title="Click here, to save current record" />
               
                 </span>
            </div>
        </div>

    </div>
}

<script type="text/javascript">

       

        function BindAssetName(e) {

            var assettypeId = 0;

            if ($("#ddlAssetType").val() > 0) {

                jQuery.post("@Url.Action("GetAssetName", "AssetManagementDetails")", {
                    StatusID: 1,
                    AssetTypeID: $("#ddlAssetType").val(),
                }).done(function (data) {
                    
                    if (data.assetname != "") {

                        $("#ddlAssetname").html("");
                        $.each(data.assetname, function (key, value) {
                            $("#ddlAssetname").append($("<option></option>").val(value.Value).html(value.Text));
                        });
                    }
                });
        }
        }

</script>

