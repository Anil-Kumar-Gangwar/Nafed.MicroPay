
@using MicroPay.Web.Models;
@model SalaryHeadFormulaEditorVM

@using (Ajax.BeginForm("_PostFormulaEditor", "CalculateArrear", new AjaxOptions { HttpMethod = "POST", OnSuccess = "onSuccessArrear" }, new { defaultbutton = "btnformalsubmit" }))
{
                @Html.HiddenFor(model => model.fieldName)
                @Html.HiddenFor(model => model.BranchFormulaID)
                
    <div class="row">
        <div class="col-xl-7 col-lg-7 col-md-7 col-sm-7 col-xs-12 pt-2">

            <div class="form-group">

                <div class="row">
                    <div class="col-lg-4 col-md-2 col-sm-2 col-xs-12">
                        @Html.LabelFor(model => model.Percentage, new { @class = "control-label mt-2 required" })

                    </div>
                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                        @Html.EditorFor(model => model.Percentage, new { htmlAttributes = new { @class = "form-control", @type = "number", @step = "0.01", @max = "100" } })
                        @*@Html.ValidationMessageFor(model => model.Percentage, "", new { @class = "text-danger" })*@
                    </div>
                    <div class="col-lg-4 col-md-2 col-sm-2 col-xs-12 pl-0">
                        <input type="button" value="Add >>" id="btnAddField" class="btn btn-info btn-md toggle-tooltip" />

                    </div>

                </div>

                <div class="row">
                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">

                    </div>
                    <div class="col-lg-8 col-md-8 col-sm-8 col-xs-12">

                        @Html.ValidationMessageFor(model => model.Percentage, "", new { @class = "text-danger" })
                    </div>


                </div>
            </div>
            <div class="form-group">

                <div class="row">
                    <div class="col-lg-4 col-md-2 col-sm-2 col-xs-12">
                        @Html.Label("Operator", new { @class = "control-label mt-2" })
                    </div>
                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                        @Html.DropDownList("ddlOperators", new List<SelectListItem>
                        {
                        new SelectListItem{ Text="+", Value = "+" }, new SelectListItem{ Text="-", Value = "-" },}, new { @class = "custom-select" })


                    </div>
                    <div class="col-lg-4 col-md-2 col-sm-2 col-xs-12 pl-0">
                        <input type="button" value="<< Remove" id="btnremoveField" class="btn btn-info btn-md toggle-tooltip" />

                    </div>

                </div>
            </div>
            <div class="form-group">

                <div class="row">
                    <div class="col-lg-4 col-md-2 col-sm-2 col-xs-12">
                        @Html.LabelFor(model => model.headFields, new { @class = "control-label mt-2 required" })
                    </div>
                    <div class="col-lg-8 col-md-8 col-sm-8 col-xs-12">
                        @Html.DropDownListFor(model => model.headFields, new SelectList(Model.headFields, "FieldName", "FieldDesc"), "Select", new { @class = "custom-select" })
                        @Html.ValidationMessage("SalHeadFieldRequired", "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-5 col-lg-5 col-md-5 col-sm-5 col-xs-12">

            <div class="form-group p-1" style="border:1px solid #ddd; min-height:150px;" id="dv-formulaTextArea">
                @Html.ListBoxFor(m => m.selectedFields, new MultiSelectList(Model.fieldList, "FieldName", "FieldDesc"), new { size = 5, @class = "form-control", @style = "height:150px; overflow-y:scroll;" })

            </div>

        </div>
    </div>
    <div>
        <input type="submit" value="Ok" id="btnformalsubmit" class="btn btn-info pull-right btn-md toggle-tooltip" />
    </div>
}
<script type="text/javascript">

    function onSuccessArrear(data) {
        debugger;
        if (typeof data.branchFormulaID=='undefined')
        {
            $("#div-fm").html(data);
        }
        else {

            if (data.branchFormulaID == null) {

                $("#LookUpHeadName").val(data.percentageVal + " %" + " of (" + data.formulaExpression + ")");
                $("#dv-formula-Form").find('input[id*="FormulaText"]').val(data.percentageVal + " %" + " of (" + data.formulaDisplayExpression + ")");
                $('#FormulaModel').modal('hide');
            }
            else {

                $("#div-branch-sal-head-rule-form").find('input[id*="FormulaText"]').val(data.percentageVal + " %" + " of (" + data.formulaDisplayExpression + ")");
                $("#BranchLookUpHeadName").val(data.percentageVal + " %" + " of (" + data.formulaExpression + ")");
                $("#BranchLookUpHead").val(data.percentageVal + " %" + " of (" + data.formulaDisplayExpression + ")");
                $('#FormulaModel').modal('hide');
            }

        }

    }

    function isNumber(evt) {
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        return true;
    }

    $('#btnremoveField').click(function () {

        $("#selectedFields option:selected").each(function () {
            $(this).remove();
        });
    });

    $("#btnAddField").click(function () {

        var operator = $("#ddlOperators").val().trim();
        var headValue = $("#headFields").val().trim();
        var headText = $("#headFields option:selected").text().trim();
        var optionValue = operator + headValue;
        var optionText = operator + headText;
        var listBox = $("[id*=selectedFields]");
        var option = $("<option/>").val(optionValue).html(optionText);
        listBox.append(option);

    });
    //$("#submitForm").click(function(){
    //    $("#selectedFields option").prop("selected", "selected");
    //    $("#submitForm").submit();
    //});
    $(document).on("click", "#btnformalsubmit", function () {

        $("#selectedFields option").prop("selected", "selected");
        // $("#submitForm").submit();

    });



    //var number = document.getElementById('Percentage');

    //// Listen for input event on numInput.
    //number.onkeydown = function (e) {
    //    if (!((e.keyCode > 95 && e.keyCode < 106)
    //      || (e.keyCode > 47 && e.keyCode < 58)
    //      || e.keyCode == 8)) {
    //        return false;
    //    }
    //}

</script>