@model Nafed.MicroPay.Model.BonusWages
@{
    ViewBag.Title = "Calculate Bonus";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="card_new_header alert alert-danger">
    <div class="col-sm-6">
        NOTE : Fields marked with (*) are compulsory fields
    </div>
    <div class="col-sm-6 text-right">
        <b> </b>
    </div>
</div>
@using (Html.BeginForm("Create", "CalculateBonus", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div class="card_new_body">
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 mb-2">
                <div class="row">
                    @Html.LabelFor(model => model.EmpTypeID, htmlAttributes: new { @class = "Control-label col-lg-2 col-md-2 col-sm-2 col-xs-6 mb-2  required" })
                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12 mb-2">
                        @Html.DropDownListFor(model => model.EmpTypeID, (IEnumerable<SelectListItem>)ViewBag.EmpType, new { @class = "custom-select", @id = "ddlReportType" })
                        @Html.ValidationMessageFor(model => model.EmpTypeID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    @Html.LabelFor(model => model.FinancialYear, htmlAttributes: new { @class = "control-label col-lg-2 col-md-2 col-sm-2 col-xs-6 mb-2  required" })
                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12 mb-2">
                        @Html.DropDownListFor(model => model.FinancialYear, (IEnumerable<SelectListItem>)ViewBag.ddlYear, "Select", new { @class = "custom-select", @id = "ddlfinancialyear" })
                        @Html.ValidationMessageFor(model => model.FinancialYear, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    @Html.LabelFor(model => model.branchID, htmlAttributes: new { @class = " Control-label col-lg-2 col-md-2 col-sm-2 col-xs-6 mb-2  required" })
                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12 mb-2">
                        @*@Html.DropDownListFor(model => model.branchID, new SelectList(Model.branchList, "id", "value"), "Select", new { @class = "custom-select", @id = "ddlBranchList", @onchange = "BindEmployeeOnBranch()" })*@
                        @Html.DropDownListFor(model => model.branchID, (IEnumerable<SelectListItem>)ViewBag.Branch, new { @class = "custom-select", @id = "ddlBranchList" })
                        @Html.ValidationMessageFor(model => model.branchID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    @Html.LabelFor(model => model.BonusRate , htmlAttributes: new { @class = " Control-label col-lg-2 col-md-2 col-sm-2 col-xs-6 mb-2  required" })
                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12 mb-2">
                        @Html.EditorFor(model => model.BonusRate, new { htmlAttributes = new { @class = "form-control text-right", @type = "number", @min = "0", @step = "0.01" } })
                        @Html.ValidationMessageFor(model => model.BonusRate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="divider-chevron"></div>
                <span class="pull-right">
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-light btn-md toggle-tooltip", @title = "Click here, to redirect on list page" })
                    <input type="submit" value="Calculate Bonus" class="btn btn-info btn-md pull-center toggle-tooltip" title="Click here, to save current record" />
                </span>
            </div>
        </div>
    </div>

}

<script type="text/javascript">

            function BindEmployeeOnBranch(e) {
                debugger;
                var branchId = 0;
                branchId = $("#ddlBranchList").val();
                $("#ddlEmployee").html("");
                if (branchId > 0) {
                    jQuery.post("@Url.Action("GetBranchEmployee", "CalculateExgratia")", {
                        branchID: branchId,
                    }).done(function (data) {

                        if (data.employees != "") {
                            $("#ddlEmployee").html("");
                            $.each(data.employees, function (key, value) {
                                $("#ddlEmployee").append($("<option></option>").val(value.Value).html(value.Text));
                            });
                        }
                    });
                } else {
                    $("#ddlEmployee").append($("<option></option>").val(0).html('Select'));
                }
            }
</script>

