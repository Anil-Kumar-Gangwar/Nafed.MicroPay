@using Nafed.MicroPay.Model
@model CandidateRegistration

@{

    var monthList = new List<SelectListModel>();
    var yearList = new List<SelectListModel>();

    for (int i = 1; i <= 12; i++)
    {
        monthList.Add(new SelectListModel { id = i, value = i.ToString() });
    }

    for (int i = 1; i <= 35; i++)
    {
        yearList.Add(new SelectListModel { id = i, value = i.ToString() });
    }
}

<script type="text/javascript">

    $('.toggle-tooltip').tooltip();

</script>


<table class="table table-bordered table-centered dt-responsive w-100">

    <thead>
        <tr>
            <th rowspan="2">#</th>
            <th class="required" rowspan="2" style="width:10%;">Office / Organization </th>
            <th class="required" rowspan="2" style="width:20%;">Post</th>
            <th colspan="2" style="width:10%;">Period of Service</th>
            <th colspan="3" style="width:20%;">Pay Band and Grade Pay / Pay scale of the post</th>
            <th class="required" rowspan="2" style="width:10%;">Nature of appointment whether regular / adhoc / deputation</th>
            <th class="required" rowspan="2">Nature of duties in detail</th>
            <th rowspan="2">Remove</th>
        </tr>
        <tr>
            <th class="required" style="width:5%;">From</th>
            <th class="required" style="width:5%;">To</th>

            <th>Pay in PB</th>
            <th>G.P. </th>
            <th class="required">Basic Pay & Level</th>

        </tr>

    </thead>


    <tbody>

        @if (Model.candidateGovtWrkExp != null && Model.candidateGovtWrkExp.Count() > 0)
        {
            for (int i = 0; i < Model.candidateGovtWrkExp.Count(); i++)
            {
                <tr>
                    <td class="text-right">@(i + 1)<text>.</text> </td>
                    <td>
                        @Html.EditorFor(model => model.candidateGovtWrkExp[i].OrganisationName, new { htmlAttributes = new { @class = "form-control", @maxlength = "200" } })
                        @Html.ValidationMessageFor(m => Model.candidateGovtWrkExp[i].OrganisationName, "", new { @class = "text-danger" })

                    </td>

                    <td>
                        @Html.EditorFor(model => model.candidateGovtWrkExp[i].Postheldonregularbasis, new { htmlAttributes = new { @class = "form-control", @maxlength = "100" } })
                        @Html.ValidationMessageFor(m => Model.candidateGovtWrkExp[i].Postheldonregularbasis, "", new { @class = "text-danger" })
                    </td>

                    <td>

                        @if (Model.candidateGovtWrkExp[i].RegistrationID > 0)
                        {
                            @Html.EditorFor(model => model.candidateGovtWrkExp[i].FromDate, new { htmlAttributes = new { @class = "form-control", @type = "date", @style = "width: 140px !important;" } })
                        }
                        else
                        {
                            @Html.EditorFor(model => model.candidateGovtWrkExp[i].FromDate, new { htmlAttributes = new { @class = "form-control", @type = "date", @style = "width: 140px !important;" } })
                        }

                        @Html.HiddenFor(model => model.candidateGovtWrkExp[i].RegistrationID)
                        @Html.HiddenFor(model => model.candidateGovtWrkExp[i].CreatedBy)
                        @Html.HiddenFor(model => model.candidateGovtWrkExp[i].CreatedOn)

                        @Html.ValidationMessageFor(m => Model.candidateGovtWrkExp[i].FromDate, "", new { @class = "text-danger" })
                    </td>

                    <td>

                        @if (Model.candidateGovtWrkExp[i].RegistrationID > 0)
                        {
                            @Html.EditorFor(model => model.candidateGovtWrkExp[i].ToDate, new { htmlAttributes = new { @class = "form-control", @type = "date", @style = "width: 140px !important;" } })
                        }
                        else
                        {
                            @Html.EditorFor(model => model.candidateGovtWrkExp[i].ToDate, new { htmlAttributes = new { @class = "form-control", @type = "date", @style = "width: 140px !important;" } })
                        }

                        @Html.ValidationMessageFor(m => Model.candidateGovtWrkExp[i].ToDate, "", new { @class = "text-danger" })
                    </td>


                    <td>
                        @Html.EditorFor(model => model.candidateGovtWrkExp[i].PayinPB, new { htmlAttributes = new { @class = "form-control text-right", @type = "number", @maxlength = "10" } })

                    </td>

                    <td>
                        @Html.EditorFor(model => model.candidateGovtWrkExp[i].GP, new { htmlAttributes = new { @class = "form-control text-right", @type = "number", @maxlength = "10" } })
                        @Html.ValidationMessageFor(m => Model.candidateGovtWrkExp[i].GP, "", new { @class = "text-danger" })
                    </td>


                    <td>
                        @Html.EditorFor(model => model.candidateGovtWrkExp[i].BasicPay, new { htmlAttributes = new { @class = "form-control text-right", @type = "number", @maxlength = "10" } })
                        @Html.ValidationMessageFor(m => Model.candidateGovtWrkExp[i].BasicPay, "", new { @class = "text-danger" })
                    </td>


                    <td>


                        @Html.EnumDropDownListFor(model => model.candidateGovtWrkExp[i].enumNatureOfAppointment, "Select", new { @class = "custom-select" })
                        @Html.ValidationMessageFor(m => Model.candidateGovtWrkExp[i].enumNatureOfAppointment, "", new { @class = "text-danger" })
                        @*@Html.EditorFor(model => model.candidateGovtWrkExp[i].Natureofappointment, new { htmlAttributes = new { @class = "form-control" } })*@
                    </td>


                    <td>
                        @Html.TextAreaFor(model => model.candidateGovtWrkExp[i].Natureofdutiesindetail, new { htmlAttributes = new { @class = "form-control", @maxlength = "4000" }, @style = "min-height:100px;max-height:200px;" })

                    </td>

                    <td class="text-center">

                        @Ajax.ActionLink("Remove",
                             "_RemoveCandidateGvotWrkExp", new
                             {
                                 sNo = Model.candidateGovtWrkExp[i].sno
                             },
                             new AjaxOptions
                             {
                                 // OnBegin = "OnBegin('tr_" + @sno + "')",
                                 // OnSuccess = "OnRowDeletedSuccess",
                                 UpdateTargetId = "div-form-CandidateGovtWorkExperience-grid",
                                 InsertionMode = InsertionMode.Replace,
                                 Confirm = "Are you sure you want to remove this row?",
                                 HttpMethod = "GET"
                             }, new { @class = "btn btn-danger btn-xs toggle-tooltip btn-sectionAddRow", @title = "Click here, to remove this row." })
                    </td>
                </tr>

            }
        }
        else
        {
            <tr>
                <td colspan="12" class="text-center">No Record Found. </td>
            </tr>
        }
    </tbody>

</table>

@if (Model.candidateGovtWrkExp != null && Model.candidateGovtWrkExp.Count() > 0)
{
    <div class="form-group">

        <div class="row">

            <div class="col-lg-2 col-md-2 col-sm-12 col-xs-12">

                Total relevent experience

            </div>

            <div class="col-lg-2 col-md-2 col-sm-12 col-xs-12">

                Year

            </div>

            <div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
                @Html.DropDownListFor(model => model.GovtExperienceInYear, new SelectList(yearList, "id", "value"), "Select", new { @class = "custom-select" })

            </div>

            <div class="col-lg-2 col-md-2 col-sm-12 col-xs-12">

                Month

            </div>

            <div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
                @Html.DropDownListFor(model => model.GovtExperienceInMonth, new SelectList(monthList, "id", "value"), "Select", new { @class = "custom-select" })





            </div>


        </div>
    </div>

    <div class="form-group">

        <div class="row">

            <div class="col-lg-2 col-md-2 col-sm-12 col-xs-12">
                Relevent experience after required minimum qualification
            </div>

            <div class="col-lg-2 col-md-2 col-sm-12 col-xs-12">

                Year

            </div>

            <div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
                @Html.DropDownListFor(model => model.GovtReleExpInYear, new SelectList(yearList, "id", "value"), "Select", new { @class = "custom-select" })





            </div>

            <div class="col-lg-2 col-md-2 col-sm-12 col-xs-12">

                Month

            </div>

            <div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
                @Html.DropDownListFor(model => model.GovtReleExpInMonth, new SelectList(monthList, "id", "value"), "Select", new { @class = "custom-select" })




            </div>



        </div>
    </div>

}
