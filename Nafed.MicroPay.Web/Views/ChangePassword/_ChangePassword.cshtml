@model Nafed.MicroPay.Model.ChangePassword
<div id="div-password-form">

    @using (Ajax.BeginForm("ChangePassword", new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess" }))
    {
        @Html.HiddenFor(model => Model.UserID)

        <div class="card">
            <div class="card-header">
                Change your password by providing your existing password in old password and new password in New Password and Confirm Password input.
            </div>
            <div class="card-body">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="row col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <h6>
                            <span class="text-xl-left alert-warning">

                                (Recommendation for New Password  :

                                Password should contain atleast one upper case letter, one lower case letter, one digit, 
                                one special character, 8-50 characters long and should not contain username .
                                For example- Test@123456 )

                            </span>
                        </h6>
                    </div>

                    <hr />

                    <div class="row">
                        <div class="col-md-12 form-group">
                            <p class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                @Html.LabelFor(model => model.OldPassword, htmlAttributes: new { @class = "required" })
                            </p>
                            <div class="col-lg-8 col-md-8 col-sm-8 col-xs-12 mb-2">
                                <div class="input-group">
                                    <div class="input-group-append">
                                        <div class="input-group-text">
                                            <i class="fa fa-key"></i>
                                        </div>
                                    </div>
                                    @Html.TextBoxFor(Model => Model.OldPassword, null, new { @class = "form-control", @required = "required", @data_toggle = "tooltip", title = "Please enter your Old Password.", placeholder = "Old Password", maxlength = 50, autofocus = "autofocus", @type = "password", autocomplete = "off" })
                                    @Html.HiddenFor(Model => Model.hdOldPassword)
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12  form-group">
                            <p class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "required" })

                            </p>
                            <div class="col-lg-8 col-md-8 col-sm-8 col-xs-12 mb-2">
                                <div class="input-group">
                                    <div class="input-group-append">
                                        <div class="input-group-text">
                                            <i class="fa fa-key"></i>
                                        </div>
                                    </div>
                                    @Html.TextBoxFor(Model => Model.Password, null, new { @class = "form-control", @required = "required", @data_toggle = "tooltip", title = "Please enter New Password.", placeholder = "New Password", maxlength = 50, @type = "password", autocomplete = "off" })
                                    @Html.HiddenFor(Model => Model.hdPassword)
                                </div>

                                @*@Html.TextBoxFor(Model => Model.Password, null, new { @class = "form-control", @required = "required", @data_toggle = "tooltip", title = "Please enter New Password.", placeholder = "New Password", maxlength = 25, @type = "password", autocomplete = "off" })*@
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>


                    <div class="row">

                        <div class="col-md-12  form-group">

                            <p class="col-lg-4 col-md-4 col-sm-8 col-xs-12">
                                @Html.LabelFor(model => model.CPassword, htmlAttributes: new { @class = "required" })
                            </p>
                            <div class="col-lg-8 col-md-8 col-sm-8 col-xs-12 mb-2 font-weight-bold">
                                <div class="input-group">
                                    <div class="input-group-append">
                                        <div class="input-group-text">
                                            <i class="fa fa-key"></i>
                                        </div>
                                    </div>
                                    @Html.TextBoxFor(Model => Model.CPassword, null, new { @class = "form-control", @required = "required", @data_toggle = "tooltip", title = "Please enter Confirm Password.", placeholder = "Confirm Password", maxlength = 50, @type = "password", autocomplete = "off" })
                                    @Html.HiddenFor(Model => Model.hdCPassword)
                                    @Html.ValidationMessageFor(model => model.CPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer">


                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12  pull-right text-right">
                    <a data-toggle="tooltip" data-placement="top" title="Click here to redirect on home page." class="btn btn-dark btn-md text-white" href="@Url.Action("Index","Home")">Back</a>
                    <button data-toggle="tooltip" data-placement="top" title="Click here To Change Password." id="btnSubmit" type="submit" name="submitButton" onclick="SubmitEncry()" class="btn btn-primary btn-md mr-2">Submit</button>
                </div>

                <div class="col-lg-12 col-md-12 mt-4">
                    <p class="text-danger">@MvcHtmlString.Create(@ViewBag.error)</p>
                </div>
            </div>

        </div>





    }
</div>

<script type="text/javascript">
    function OnSuccess(data) {
        if (data.part == undefined) {
            $("#div-password-form").html(data);
        }
    }

    function SubmitEncry() {
        var txtOldPassword = $('#OldPassword').val();
        var txtPassword = $('#Password').val();               
        var txtCPassword = $('#CPassword').val();

        if (txtPassword == '' || txtOldPassword == '' || txtCPassword == '') {
            return;
        }
        var key = CryptoJS.enc.Utf8.parse('8080808080808080');
        var iv = CryptoJS.enc.Utf8.parse('8080808080808080');
        var encryptedOldPassword = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(txtOldPassword), key,
            {
                keySize: 128 / 8,
                iv: iv,
                mode: CryptoJS.mode.CBC,
                padding: CryptoJS.pad.Pkcs7
            });
        $('#OldPassword').val(encryptedOldPassword);
        $('#hdOldPassword').val(encryptedOldPassword);
        var encryptedpassword = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(txtPassword), key,
            {
                keySize: 128 / 8,
                iv: iv,
                mode: CryptoJS.mode.CBC,
                padding: CryptoJS.pad.Pkcs7
            });
        $('#hdPassword').val(encryptedpassword);
        $('#Password').val(encryptedpassword);

        var encryptedCpassword = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(txtCPassword), key,
            {
                keySize: 128 / 8,
                iv: iv,
                mode: CryptoJS.mode.CBC,
                padding: CryptoJS.pad.Pkcs7
            });
        $('#hdCPassword').val(encryptedCpassword);
        $('#CPassword').val(encryptedCpassword);

    }
</script>
