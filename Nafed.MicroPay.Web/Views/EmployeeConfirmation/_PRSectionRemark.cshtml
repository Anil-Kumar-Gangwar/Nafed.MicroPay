@using Nafed.MicroPay.Model
@model ConfirmationPRSectionRemarks

<div id="div-PersonalSection-remark">

    @using (Ajax.BeginForm("PostPersonalSectionRemarks", "EmployeeConfirmation", null, new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess" }, new { id = "" }))
    {
        @Html.HiddenFor(model => model.FormHdID)
        @Html.HiddenFor(model => model.FormHeaderID)
        @Html.HiddenFor(model => model.FormTypeID)
        @Html.HiddenFor(model => model.EmployeeID)
        @Html.HiddenFor(model => model.ProcessID)
        @Html.HiddenFor(model => model.PRSubmit)
        @Html.HiddenFor(model => model.DueDate)
        @Html.HiddenFor(model => model.StatusID)
        <div class="form-group">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <table id="tblGrid2" class="table table-centered table-striped dt-responsive w-100">
                        <thead>
                            <tr>
                                <th>Reporting To</th>
                                <th>Reporting Remark</th>
                                <th>Reviewer To</th>
                                <th>Reviewer Remark</th>
                                <th>Status</th>
                                <th>View Form</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.confHdrList != null && Model.confHdrList.Count > 0)
                            {
                                for (int i = 0; i < Model.confHdrList.Count; i++)
                                {
                                    <tr>
                                        @Html.HiddenFor(model => Model.confHdrList[i].ReportingName)
                                        @Html.HiddenFor(model => Model.confHdrList[i].ReportingRemark)
                                        @Html.HiddenFor(model => Model.confHdrList[i].ReviewingName)
                                        @Html.HiddenFor(model => Model.confHdrList[i].ReportingRemark)
                                        @Html.HiddenFor(model => Model.confHdrList[i].StatusID)
                                        <td>@Model.confHdrList[i].ReportingName</td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(Model.confHdrList[i].ReportingRemark))
                                            {
                                                @Model.confHdrList[i].ReportingRemark
                                            }
                                            else
                                            {
                                                <text>-</text>
                                            }
                                        </td>
                                        <td>@Model.confHdrList[i].ReviewingName</td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(Model.confHdrList[i].ReviewerRemark))
                                            {
                                                @Model.confHdrList[i].ReviewerRemark
                                            }
                                            else
                                            {
                                                <text>-</text>
                                            }
                                        </td>
                                        <td>
                                            @if (Model.confHdrList[i].StatusID == (int)ConfirmationFormState.Pending)
                                            {
                                                <span class="badge badge-pill badge-warning col-md-12">Pending </span>
                                            }
                                            @if (Model.confHdrList[i].StatusID == (int)ConfirmationFormState.SavedByReporting)
                                            {
                                                <span class="badge badge-pill badge-info col-md-12">Under Process Reporting Officer</span>
                                            }
                                            else if (Model.confHdrList[i].StatusID == (int)ConfirmationFormState.SubmitedByReporting)
                                            {
                                                <span class="badge badge-pill badge-success col-md-12"> Accepted by Reporting Officer</span>
                                            }

                                            else if (Model.confHdrList[i].StatusID == (int)ConfirmationFormState.RejectedByReporting)
                                            {
                                                <span class="badge badge-pill badge-danger col-md-12">Rejected by Reporting Officer</span>
                                            }
                                            @if (Model.confHdrList[i].StatusID == (int)ConfirmationFormState.SavedByReviewer)
                                            {
                                                <span class="badge badge-pill badge-info col-md-12">Under Process Reviewing Officer </span>
                                            }
                                            else if (Model.confHdrList[i].StatusID == (int)ConfirmationFormState.SubmitedByReviewer)
                                            {
                                                <span class="badge badge-pill badge-success col-md-12">Accepted by Reviewing Officer</span>
                                            }
                                            else if (Model.confHdrList[i].StatusID == (int)ConfirmationFormState.RejectedByReviewer)
                                            {
                                                <span class="badge badge-pill badge-danger col-md-12">Rejected by Reviewing Officer</span>
                                            }
                                        </td>
                                        <td>
                                            @*<a href="@Url.Action("View", "ConfirmationForm", new { formTypeID = Model.confHdrList[i].FormTypeID, reportingTo = Model.confHdrList[i].ReportingTo, reviewingTo = Model.confHdrList[i].ReviewingTo, processTypeID = Model.confHdrList[i].ProcessID, empID = Model.confHdrList[i].EmployeeID, formHdrID = Model.confHdrList[i].FormHdrID ,apid= Model.confHdrList[i].EmpProcessAppID,chdrid=Model.FormHeaderID})" title="Click here, to view this record" target="_blank" data-toggle="tooltip">
                                                <i class="far fa-eye text-info" aria-hidden="true"></i>
                                            </a>*@

                                            @Html.EncodedImageActionLink("", "View", "ConfirmationForm", new { formTypeID = Model.confHdrList[i].FormTypeID, reportingTo = Model.confHdrList[i].ReportingTo, reviewingTo = Model.confHdrList[i].ReviewingTo, processTypeID = Model.confHdrList[i].ProcessID, empID = Model.confHdrList[i].EmployeeID, formHdrID = Model.confHdrList[i].FormHdrID, apid = Model.confHdrList[i].EmpProcessAppID, chdrid = Model.FormHeaderID }, new { @class = "toggle-tooltip", title = "Click here, to view this record" }, "~/Images/view.png")
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    @if (Model.PRSubmit)
                    {
                        <div class="col-lg-2 col-md-2 col-sm-12 col-xs-12">
                            @Html.Label("Remark", new { @class = "label  font-weight-bold" })
                        </div>
                        <div class="col-lg-10 col-md-10 col-sm-12 col-xs-12">
                            @Model.PersonalSectionRemark
                        </div>
                    }
                    else
                    {
                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                            @Html.Label("Remark", new { @class = "label  font-weight-bold" })
                        </div>
                        <div class="row">
                            <div class="col-lg-5 col-md-5 col-sm-5 col-xs-12">
                                @Html.TextAreaFor(model => model.PersonalSectionRemark, new { @class = "form-control", @maxlength = "7999", @cols = "20", @rows = "6", @style = "max-height:130px;min-height:130px" })
                                @Html.ValidationMessageFor(model => model.PersonalSectionRemark, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-7 col-md-7 col-sm-7 col-xs-12">
                                <div class="row mb-2">
                                    <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12 required">
                                        File No.
                                    </div>
                                    <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12">
                                        @Html.TextBoxFor(model => model.FileNo, new { @class = "form-control", @maxlength = "50", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.FileNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="row mb-2">
                                    <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12 required">
                                        Email id of Divisional Head
                                    </div>

                                    <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12">
                                        @Html.TextBoxFor(model => model.GMEmailID, new { @class = "form-control", @maxlength = "50", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.GMEmailID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="row mb-2">
                                    <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12 required">
                                        Divisional Head Employee Code
                                    </div>
                                    <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12">
                                        @Html.EditorFor(model=> model.DVHEmployeeCode, new { htmlAttributes=new { @class = "form-control",id= "EmployeeCodes", @maxlength = "6", @autocomplete = "off"} })
                                        @Html.ValidationMessageFor(model=> model.DVHEmployeeCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="row mb-2 d-none">
                                    <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12 required">
                                        GM Name(Pers.)
                                    </div>
                                    <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12">
                                        @Html.TextBoxFor(model => model.GeneralManager, new { @class = "form-control", @maxlength = "180", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.GeneralManager, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="row mb-2 d-none">
                                    <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                                        GM Designation(Pers.)
                                    </div>
                                    <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12">
                                        @Html.TextBoxFor(model => model.GMDesignation, new { @class = "form-control", @maxlength = "180", @autocomplete = "off" })
                                    </div>
                                </div>
                                <div class="row mb-2">
                                    <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                                        Copy to - 1
                                    </div>
                                    <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12">
                                        @Html.TextBoxFor(model => model.EmailID1, new { @class = "form-control", @maxlength = "50", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.EmailID1, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="row mb-2">
                                    <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                                        Copy to - 2
                                    </div>
                                    <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12">
                                        @Html.TextBoxFor(model => model.EmailID2, new { @class = "form-control", @maxlength = "50", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.EmailID2, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="row mb-2">
                                    <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                                        Copy to - 3
                                    </div>
                                    <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12">
                                        @Html.TextBoxFor(model => model.EmailID3, new { @class = "form-control", @maxlength = "50", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.EmailID3, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="row mb-2">
                                    <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                                        Copy to - 4
                                    </div>
                                    <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12">
                                        @Html.TextBoxFor(model => model.EmailID4, new { @class = "form-control", @maxlength = "50", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.EmailID4, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                                        Copy to - 5
                                    </div>
                                    <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12">
                                        @Html.TextBoxFor(model => model.EmailID5, new { @class = "form-control", @maxlength = "50", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.EmailID5, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
            @if (!Model.PRSubmit)
            {
                <div class="row">
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 pt-2 text-right">
                        <input type="submit" value="Confirmed" id="btnSave" name="ButtonType" class="btn btn-success btn-md toggle-tooltip" title="Click here, to confirm promotion." />
                        <input type="submit" value="Extend" id="btnreject" name="ButtonType" class="btn btn-danger btn-md toggle-tooltip" title="Click here, to extend promotion." />
                        <input type="submit" value="Publish" id="btnpublish" name="ButtonType" class="btn btn-primary btn-md toggle-tooltip" title="Click here, to publish the order." />

                    </div>
                </div>
            }
        </div>
    }
</div>
<script>
    $(document).ready(function () { 
        var table = $('#tblGrid2').DataTable({ searching: false, paging: false, sorting: false });
    });

    $("#EmployeeCodes").blur(function () {
        debugger;
        var cntrlIDs = $(this).val()
        if (cntrlIDs > 0) {
            $.get('@Url.Action("GetGMNameDesignation", "EmployeeConfirmation")', { empCode: cntrlIDs }, function (htmlData) {
                debugger
                // extract values from data object and assign it to your controls
                if (htmlData != null) {
                    debugger
                    $("#GeneralManager").val(htmlData.htmlData.name);
                    $("#GMDesignation").val(htmlData.htmlData.desg);
                }
                else
                    $('#ErrorEmployeeCode').val("Please enter correct Employee Code.")
            });

        }
        else {
            debugger;
            $('#ErrorEmployeeCode').val("Please enter correct Employee Code.")
            return false;
        }
    });
</script>
