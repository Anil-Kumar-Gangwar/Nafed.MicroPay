@model Nafed.MicroPay.Model.InventoryManagement
@{
    ViewBag.Title = "Inventory Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card_new_header alert alert-danger">
    <div class="col-sm-6">
        NOTE : Fields marked with (*) are compulsory fields
    </div>
    <div class="col-sm-6 text-right">
        <b>@*[ Characters < > # ^ ; | $ are not allowed ]*@</b>
    </div>
</div>
@using (Html.BeginForm("Create", "InventoryManagement", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="card_new_body">
        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 mb-2">
                <div class="row">
                    @Html.LabelFor(model => model.ManufacturingYr, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6 col-xs-12 mb-2 required" })

                    <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12 mb-2">
                        @Html.DropDownListFor(model => model.ManufacturingYr, (IEnumerable<SelectListItem>)ViewBag.CYearList, "Select", new { @class = "custom-select" })
                        @Html.ValidationMessageFor(model => model.ManufacturingYr, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    @Html.LabelFor(model => model.AssetTypeID, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6 col-xs-12 mb-2 required" })

                    <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12 mb-2">
                        @Html.DropDownListFor(model => model.AssetTypeID, (IEnumerable<SelectListItem>)ViewBag.AssetTypeList, "Select", new { @class = "custom-select" })
                        @Html.ValidationMessageFor(model => model.AssetTypeID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    @Html.LabelFor(model => model.ManufacturerID, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6 col-xs-12 mb-2 required" })

                    <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12 mb-2">
                        @Html.DropDownListFor(model => model.ManufacturerID, (IEnumerable<SelectListItem>)ViewBag.ManufacturerList, "Select", new { @class = "custom-select" })
                        @Html.ValidationMessageFor(model => model.ManufacturerID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    @Html.LabelFor(model => model.AssetName, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6 col-xs-12 mb-2 required" })
                    <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12 mb-2">
                        @Html.EditorFor(model => model.AssetName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Asset Name", @maxlength = "100" } })
                        @Html.ValidationMessageFor(model => model.AssetName, "", new { @class = "text-danger" })

                    </div>
                </div>
                <div class="row">
                    @Html.LabelFor(model => model.SerialNo, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6 col-xs-12 mb-2 required" })
                    <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12 mb-2">
                        @Html.EditorFor(model => model.SerialNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Serial No", @maxlength = "30" } })
                        @Html.ValidationMessageFor(model => model.SerialNo, "", new { @class = "text-danger" })
                       
                    </div>
                </div>

                <div class="row">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6 col-xs-12 mb-2 required" })
                    <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12 mb-2">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control text-right", @type = "number",@min="0",@max= "999999",@step="1" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    @Html.LabelFor(model => model.Consumable, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6 col-xs-12 mb-2" })
                    <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12 mb-2">
                        <div class="form-group">
                            <label class="switch">
                                @Html.CheckBoxFor(model => model.Consumable, new { })
                                <div class="slider round">
                                </div>
                            </label>
                        </div>
                    </div>
                </div>

                <div class="row">
                    @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6 col-xs-12 mb-2 " })
                    <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12 mb-2">
                        @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control", @placeholder = "Remarks", @maxlength = "250" } })
                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })                      
                    </div>
                </div>
                <div class="divider-chevron"></div>
                <span class="pull-right">
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-light btn-md toggle-tooltip", @title = "Click here, to redirect on list page" })
                    <input type="submit" value="Create" class="btn btn-info btn-md pull-center toggle-tooltip" title="Click here, to save current record" />
                </span>
            </div>
        </div>

    </div>
}

