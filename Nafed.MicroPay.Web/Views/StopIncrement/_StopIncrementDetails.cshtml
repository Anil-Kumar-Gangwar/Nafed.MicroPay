@model MicroPay.Web.Models.ProjectedIncrementViewModel
@{
    var recordCount = Model.stopIncrementDetails == null ? 0 : Model.stopIncrementDetails.Count();
    var classForscroll = "";
    if (recordCount > 10)
    {
        classForscroll = "RecordFound";
    }
    var updationmsg = ViewBag.Message == null ? "" : ViewBag.Message;
}

<script type="text/javascript">
    $(document).ready(function () {
        if ("@updationmsg" != "")
            commonMessage("success", "@updationmsg");
    });
</script>

<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 @classForscroll">
        @Html.HiddenFor(model => model.incrementMonthId)
        <table id="tblGrid1" class="table table-bordered table-centered dt-responsive w-100">
            <thead>
                <tr>
                    <th>
                        #
                    </th>
                    <th>
                        Code
                    </th>
                    <th>
                        Name
                    </th>
                    <th>
                        Stop Increment
                    </th>
                    <th>
                        From Date
                    </th>
                    <th>
                        To Date
                    </th>
                    <th>
                        Reason
                    </th>
                </tr>
            </thead>
            <tbody>
                @if (Model.stopIncrementDetails != null && Model.stopIncrementDetails.Count() > 0)
                {
                    int index = 1;
                    for (int i = 0; i < Model.stopIncrementDetails.Count(); i++)
                    {
                        <tr>
                            <td class="text-right">@index</td>
                            <td>
                                @Html.HiddenFor(model => model.stopIncrementDetails[i].EmployeeCode)
                                @Model.stopIncrementDetails[i].EmployeeCode
                            </td>
                            <td>
                                @Html.HiddenFor(model => model.stopIncrementDetails[i].EmployeeId)
                                @Html.HiddenFor(model => model.stopIncrementDetails[i].EmployeeName)
                                @Model.stopIncrementDetails[i].EmployeeName
                            </td>
                            <td>
                                @if (Model.stopIncrementDetails[i].ValidateIncrement)
                                {
                                    @Html.CheckBoxFor(model => model.stopIncrementDetails[i].ValidateIncrement, new { @class = "", @checked = true, @id = "checkbox" + Model.stopIncrementDetails[i].EmployeeId })
                                }
                                else
                                {
                                    @Html.CheckBoxFor(model => model.stopIncrementDetails[i].ValidateIncrement, new { @class = "", @id = "checkbox" + Model.stopIncrementDetails[i].EmployeeId })
                                }
                            </td>
                            <td>
                                @Html.TextBoxFor(model => model.stopIncrementDetails[i].StopIncrementEffectiveDate, String.Format("{0:dd/MM/yyyy}", Model.stopIncrementDetails[i].StopIncrementEffectiveDate), new { @type = "text", @class = "form-control datepicker StopIncrementEffectiveDate", @placeholder = "dd/mm/yyyy" })
                                @*@Html.EditorFor(model => model.stopIncrementDetails[i].StopIncrementEffectiveDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Effective Date From", @type = "date" } })*@
                            </td>
                            <td>
                                @Html.TextBoxFor(model => model.stopIncrementDetails[i].StopIncrementEffectiveToDate, String.Format("{0:dd/MM/yyyy}", Model.stopIncrementDetails[i].StopIncrementEffectiveToDate), new { @type = "text", @class = "form-control datepicker StopIncrementEffectiveToDate",  @placeholder = "dd/mm/yyyy" })
                                @*@Html.EditorFor(model => model.stopIncrementDetails[i].StopIncrementEffectiveToDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Effective Date To", @type = "date" } })*@
                            </td>
                            <td>
                                @Html.TextAreaFor(model => model.stopIncrementDetails[i].Reason, new { htmlAttributes = new { @class = "form-control text-right", @id = "reason" + Model.stopIncrementDetails[i].EmployeeId } })
                            </td>
                        </tr>
                        index++;
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="text-center">No Record Found.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


<script type="text/javascript">
    function StopIncrementDetails() {
        var onlyStopped = $("#OnlyStopped").is(":checked");
        var incrementjan = $("#January").is(":checked");
        var incrmentjuly = $("#July").is(":checked");
        jQuery.get("@Url.Action("StopIncrementDetails", "StopIncrement")", {
            January: incrementjan,
            July: incrmentjuly,
            OnlyStopped: onlyStopped
        }).done(function (data) {
            $("#StopIncrementGridDiv").html("");
            if (data != "") {
                $("#StopIncrementGridDiv").html(data);
            }
        });
    }

    $(".StopIncrementEffectiveDate").datepicker({ dateFormat: 'dd/mm/yy', changeYear: true });
    $(".StopIncrementEffectiveToDate").datepicker({ dateFormat: 'dd/mm/yy', changeYear: true });
</script>
<style type="text/css">
    .RecordFound {
        height: 480px;
        overflow-y: scroll;
    }
</style>
