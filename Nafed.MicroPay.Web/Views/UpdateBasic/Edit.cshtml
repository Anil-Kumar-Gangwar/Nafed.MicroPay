
@model Nafed.MicroPay.Model.UpdateBasic
@{
    ViewBag.Title = "Edit Update Basic";
    ViewBag.NavigationTitle = "UpdateBasic";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card_new_header alert alert-danger">
    <div class="col-sm-6">
        NOTE : Fields marked with (*) are compulsory fields
    </div>
    <div class="col-sm-6 text-right">
        <b>@*[ Characters < > # ^ ; | $ are not allowed ]*@</b>
    </div>
</div>
@using (Html.BeginForm("Edit", "UpdateBasic", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div class="card_new_body">
        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 mb-2">
                @Html.HiddenFor(model => model.EmployeeId)
                @Html.HiddenFor(model => model.EmployeeCode)
                @Html.HiddenFor(model => model.EmployeeName)
                @Html.HiddenFor(model => model.ExistingBasic)
                @Html.HiddenFor(model => model.EmployeeSalaryID)
                @Html.HiddenFor(model => model.CreatedBy)
                @Html.HiddenFor(model => model.CreatedOn)
                <div class="row">
                    @Html.LabelFor(model => model.EmployeeName, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6 col-xs-12 mb-2" })

                    <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12 mb-2">
                        @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @placeholder = "Employee Name", @maxlength = "100" } })

                    </div>
                </div>
                <div class="row">
                    @Html.LabelFor(model => model.ExistingBasic, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-12 col-xs-12 mb-2" })
                    <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12 mb-2">
                        @Html.EditorFor(model => model.ExistingBasic, new { htmlAttributes = new { @class = "form-control integerOnly indianCurrency", @style = "text-align: right;", @disabled = "disabled", @placeholder = "Existing Basic" } })

                </div>
                </div>
                <div class="row">
                    @Html.LabelFor(model => model.NewBasic, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-12 col-xs-12 mb-2 required" })
                    <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12 mb-2">
                        @Html.EditorFor(model => model.NewBasic, new { htmlAttributes = new { @class = "form-control integerOnly ", @style = "text-align: right;", @placeholder = "New Basic" } })
                        @Html.ValidationMessage("NewbasicRequired", "", new { @class = "text-danger" })
                    </div>
                </div>
                <span class="pull-right">
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-light btn-sm toggle-tooltip", @title = "Click here, to redirect on list page" })
                    <input type="submit" value="Update" class="btn btn-info btn-sm pull-center toggle-tooltip" title="Click here, to update current record" />
                </span>
            </div>


        </div>
    </div>

}
@section scripts{
    @*<script type="text/javascript">
                $(document).ready(function () {

                    $(":text").keyup(function () {
                        var yourInput = $(this).val();
                        re = /[`~!#$%^&*()_|+\- =?;:'",.<>\{\}\[\]\\\/]/gi;
                        var isSplChar = re.test(yourInput);
                        if (isSplChar) {
                            var no_spl_char = yourInput.replace(/[`~!#$%^&*()_|+\-=?;:'",.<>\{\}\[\]\\\/]/gi, '');
                            $(this).val(no_spl_char);
                        }
                    });
                });
        </script>*@
}
