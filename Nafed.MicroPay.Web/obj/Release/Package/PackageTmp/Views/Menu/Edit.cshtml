@using MicroPay.Web.Models
@model MenuVM
@{
    ViewBag.Title = "Edit Menu";
    ViewBag.NavigationTitle = "Menu";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card_new_header alert alert-danger">
    <div class="col-sm-6">
        NOTE : Fields marked with (*) are compulsory fields
    </div>
    <div class="col-sm-6 text-right">
        <b>@*[ Characters < > # ^ ; | $ are not allowed ]*@</b>
    </div>
</div>
@using (Html.BeginForm("Edit", "Menu", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="card_new_body">
        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 mb-2">
                @Html.HiddenFor(model => model.MenuID)
                
                <div class="row">
                    @Html.LabelFor(model => model.ParentID, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6 col-xs-12 mb-2" })

                    <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12 mb-2">
                        @Html.DropDownListFor(model => model.ParentID, (IEnumerable<SelectListItem>)ViewBag.ParentList, new { id = "MenuHeaderID", @class = "custom-select" })
                        @Html.ValidationMessageFor(model => model.ParentID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    @Html.LabelFor(model => model.MenuName, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6 col-xs-12 mb-2 required" })
                    <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12 mb-2">
                        @Html.EditorFor(model => model.MenuName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Menu Name", @maxlength = "100", } })
                        @Html.ValidationMessageFor(model => model.MenuName, "", new { @class = "text-danger" })
                        @Html.ValidationMessage("RecordAlreadyExist", "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    @Html.LabelFor(model => model.URL, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6 col-xs-12 mb-2 required" })
                    <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12 mb-2">
                        @Html.EditorFor(model => model.URL, new { htmlAttributes = new { @class = "form-control", @placeholder = "URL", @maxlength = "100" } })
                        @Html.ValidationMessageFor(model => model.URL, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    @Html.LabelFor(model => model.IconClass, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6 col-xs-12 mb-2" })
                    <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12 mb-2">
                        @Html.EditorFor(model => model.IconClass, new { htmlAttributes = new { @class = "form-control", @placeholder = "Icon Class", @maxlength = "100" } })
                    </div>
                </div>
                <div class="row">
                    @Html.LabelFor(model => model.SequenceNo, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6 col-xs-12 mb-2" })
                    <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12 mb-2">
                        @Html.EditorFor(model => model.SequenceNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Sequence No", @type = "number", @min = "0", @value = "0" } })
                    </div>
                </div>

                <div class="row">
                    @Html.LabelFor(model => model.ActiveOnMobile, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6 col-xs-12 mb-2" })
                    <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12 mb-2">
                        <div class="form-group">
                            <label class="switch">
                                @Html.CheckBoxFor(model => model.ActiveOnMobile, new { @class = "form-control" })
                                <div class="slider round">
                                </div>
                            </label>
                        </div>
                    </div>
                </div>

                <div class="row">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6 col-xs-12 mb-2" })
                    <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12 mb-2">
                        <div class="form-group">
                            <label class="switch">
                                @Html.CheckBoxFor(model => model.IsActive, new { @class = "form-control" })
                                <div class="slider round">
                                </div>
                            </label>
                        </div>
                    </div>
                </div>
               
                
            </div>

            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 mb-2">

                <div class="row">
                    @Html.LabelFor(model => model.Help, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6 col-xs-12 mb-2" })

                    <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12 mb-2">
                        @Html.TextAreaFor(model => model.Help, new { @rows = 10, @id = "HelpEditor", @class = "form-control TextEditor", @placeholder = "Help /Instructions/ Guidelines" })
                    </div>

                </div>
            </div>
        </div>
    </div>

    <div class="card-footer p-4">
        <span class="pull-right">
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-light btn-md toggle-tooltip", @title = "Click here, to redirect on list page" })
            <input type="submit" value="Update" class="btn btn-info btn-md pull-center toggle-tooltip" title="Click here, to update current record" />
        </span>
    </div>

}

