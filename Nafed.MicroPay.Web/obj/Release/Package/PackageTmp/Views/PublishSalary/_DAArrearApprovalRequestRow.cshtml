@using System.Globalization;
@using Nafed.MicroPay.Model
@model PayrollApprovalRequest

@using (Ajax.BeginForm("_PostDAArrerRequestRow", "PublishSalary", new AjaxOptions
{
    HttpMethod = "POST",
    InsertionMode = InsertionMode.Replace,
    OnSuccess = "OnSuccess"
}))
{
    @Html.HiddenFor(model => model.BranchName)
    @Html.HiddenFor(model => model.EmployeeTypeID)
    @Html.HiddenFor(model => model.BranchCode)
    @Html.HiddenFor(model => model.BranchID)
    @Html.HiddenFor(model => model.ApprovalRequestID)
    @Html.HiddenFor(model => model.ProcessID)
    @Html.HiddenFor(model => model.Status)
    @Html.HiddenFor(model => model.Period)
    @Html.HiddenFor(model => model.sno)

    @Html.HiddenFor(model => model.Reporting1)
    @Html.HiddenFor(model => model.Reporting2)
    @Html.HiddenFor(model => model.Reporting3)
    @Html.HiddenFor(model => model.CreatedBy)
    @Html.HiddenFor(model => model.CreatedOn)

    @Html.Hidden("hdnAction_DAArrear_" + Model.sno)

    <td style='vertical-align:middle;'> @Model.sno</td>
    <td style='vertical-align:middle;'>

        @if (!Model.BranchID.HasValue)
        {
            Model.BranchName = Model.BranchCode == "Except-HO" ? "All Branches (Except HO)" : "All Branches";
        }

        @if (Model.BranchName == "All Branches (Except HO)")
        {
            var branch = Model.BranchID ?? 0;
            <a style="cursor:pointer; color:blue" data-toggle="tooltip" title="Click here ,to view DA arrear report (Except HO)" onclick="ViewReportDA(@branch, @Model.EmployeeTypeID, @Model.Period, 1,true)">
                @Model.BranchName
            </a>
        }
        @if (Model.BranchName == "HEAD OFFICE")
        {
            var branch = Model.BranchID ?? 0;
            <a style="cursor:pointer; color:blue" data-toggle="tooltip" title="Click here ,to view DA arrear report" onclick="ViewReportDA(@branch, @Model.EmployeeTypeID, @Model.Period, 1,false)">
                @Model.BranchName
            </a>
        }

    </td>
    @*<td style='vertical-align:middle;'>
            @{

                int f_monthNumber = (Model.PeriodForm.Value % 100); //1-12
                int t_monthNumber = (Model.PeriodTo.Value % 100);

                string f_monthName = new DateTimeFormatInfo().GetMonthName(f_monthNumber);
                string t_monthName = new DateTimeFormatInfo().GetMonthName(t_monthNumber);

                var f_Period = $"{f_monthName.Substring(0, 3) }-{Model.PeriodForm.ToString().Substring(0, 4)}";
                var t_Period = $"{t_monthName.Substring(0, 3)}-{Model.PeriodTo.ToString().Substring(0, 4)}";

                <text>
                     @f_Period to @t_Period
                </text>

            }

        </td>*@
    <td style='vertical-align:middle;'>

        @if (@Model.periodInDateFormat.HasValue)
        {
            <text>
                @Model.periodInDateFormat.Value.ToString("MMM, yyyy")
            </text>
        }
        else
        {
            <text>--</text>
        }
    </td>
    <td style='vertical-align:middle;'> @Model.EmpployeeTypeName </td>

    <td class="text-center" style='vertical-align:middle;'>

        @if (@Model.Status == (int)ApprovalStatus.RequestedByReporting1)
        {
            <h5>
                <span class="badge badge-pill badge-light col-md-12">
                    @(((ApprovalStatus)@Model.Status).GetDisplayName())
                </span>
            </h5>
        }
        else if (@Model.Status == (int)ApprovalStatus.RejectedByReporting2)
        {
            <h5>
                <span class="badge badge-pill badge-dark col-md-12">
                    @(((ApprovalStatus)Model.Status).GetDisplayName())
                </span>
            </h5>
        }
        else if (@Model.Status == (int)ApprovalStatus.ApprovedByReporting2)
        {
            <h5>
                <span class="badge badge-pill badge-dark col-md-12">
                    @(((ApprovalStatus)@Model.Status).GetDisplayName())
                </span>
            </h5>
        }
        else if (@Model.Status == (int)ApprovalStatus.RejectedByReporting3)
        {
            <h5>
                <span class="badge badge-pill bg-teal col-md-12">
                    @(((ApprovalStatus)@Model.Status).GetDisplayName())
                </span>
                @*<span class="badge badge-pill badge-success col-md-12 toggle-tooltip" title="Employee Remark: @item.Reason <br/> Reporting Remark: @item.ReporotingToRemark <br/> Reviwer Remark: @item.ReviewerToRemark">Approved</span>*@
            </h5>
        }
        else if (@Model.Status == (int)ApprovalStatus.ApprovedByReporting3)
        {
            <h5>
                <span class="badge badge-pill badge-dark col-md-12">
                    @(((ApprovalStatus)@Model.Status).GetDisplayName())
                </span>
            </h5>
        }

    </td>

    <td>
        @Html.TextAreaFor(model => @Model.Comments,
                                  new
                                  {
                                      @class = "form-control",
                                      @maxlength = "200",
                                      @style = "min-height:100px;max-height:100px"
                                  })
    </td>

    <td class="text-center" style='vertical-align:middle;'>
        @if (Model.BranchName == "All Branches (Except HO)")
        {
            var branch = Model.BranchID ?? 0;
            <a style="cursor:pointer" data-toggle="tooltip" title="Click here ,to view all branches DA arrear summary report (Except HO)" onclick="ViewReportDA(@branch, @Model.EmployeeTypeID, @Model.Period, 2,true)">
                <i class="far fa-eye text-info" aria-hidden="true"></i>
            </a>
        }
        @if (Model.BranchName == "HEAD OFFICE")
        {
            var branch = Model.BranchID ?? 0;
            <a style="cursor:pointer" data-toggle="tooltip" title="Click here ,to view head office DA arrear summary report" onclick="ViewReportDA(@branch, @Model.EmployeeTypeID, @Model.Period, 2,true)">
                <i class="far fa-eye text-info" aria-hidden="true"></i>
            </a>
        }

        @*<a data-ajax="true" data-toggle="tooltip"
               href="@Url.Action("_GetDAArrearReport", "PublishSalary",
                    new { branchID = Model.BranchID, empTypeID= Model.EmployeeTypeID,
                        employeeID= Model.EmployeeID,
                        salYear= Model.periodInDateFormat.Value.Year,
                        periodFrom= Model.PeriodForm, periodTo = Model.PeriodTo
                    })"
               method="GET" title="Click here ,to export DA Arrear report."
               data-ajax-success="OnDAArrear_ExportSuccess">

                <span class="far fa-file-excel text-info" aria-hidden="true"></span>
            </a>*@

    </td>

    <td class="text-center" style='white-space: nowrap; vertical-align:middle;'>

        @if (Model.Status == (int)ApprovalStatus.RequestedByReporting1 || Model.Status == (int)ApprovalStatus.ApprovedByReporting2)
        {
            <input type="submit" value="Approve" id=btnArrpove_@Model.sno name="ButtonTypeX" onclick="btnClick_DA('@Model.sno','Approve');" class="btn btn-success btn-md pull-center toggle-tooltip" title="Click here, to approve this request." />

            <input type="submit" value="Reject" id=btnReject_@Model.sno name="ButtonTypeX" onclick="btnClick_DA('@Model.sno','Reject');" class="btn btn-danger btn-md pull-center toggle-tooltip" title="Click here, to reject this request." />
        }

    </td>
}

<script type="text/javascript">

    function OnDAArrear_ExportSuccess(data) {

        if (data.fileName == "" || data.fileName == undefined) {
            $("#branchRequired").text('Please select branch.');
        }
        if (data.fileName != "" && data.message == "success") {
            //  $("#div-report-filters").load("@Url.Action("_ReportFilter", "ExportSalaryReport")");
            window.location.href = "@Url.RouteUrl(new { Controller = "Base", Action = "DownloadAndDelete" })/?sFileName=" + data.fileName + "&sFileFullPath=" + data.fullPath;

        }

        if (data.message == "error" && data.part == 1) {
            $("#div-report-filters").html(data.htmlData);
        }
    }


    function btnClick_DA(sno, action) {

        var hdfieldID = "#hdnAction_DAArrear_" + sno;
        //   alert(hdfieldID); alert(action);
        $(hdfieldID).val(action);

    }
    function OnSuccess(data) {

        if (data.msgType == "success") {
            commonMessage(data.msgType, data.msg);
            window.location.reload();
        }
        if (data.msgType == "error") {
            commonMessage(data.msgType, data.msg);
        }
    }


    function ViewReportDA(branchID, employeeTypeID, period, ReportTypeID, AllBranch) {
        debugger;
        let toPeriod = '';        
        let year = period.toString().substring(0, 4);
        let month = period.toString().substring(4, 6);
        fromPeriod = month + '' + year;
        var model = {
            branchID: branchID,
            employeeTypeID: employeeTypeID,
            fromPeriod: fromPeriod,
            ReportTypeID: ReportTypeID,
            AllBranch: AllBranch
        };
        var url = "@Url.Action("DAArrearReportDetails", "DAArrearReports")";
        $.ajax({
            type: "POST",
            data: JSON.stringify(model),           
            url: url,
            contentType: "application/json"
        }).done(function (data) {
            if (data.IsValidFilter) {
                window.open("@Url.Action("ReportViewer", "Base")", "_blank");
            }
            else {
                $("#div-report-filters").html(data);
            }
        });
    }

</script>
