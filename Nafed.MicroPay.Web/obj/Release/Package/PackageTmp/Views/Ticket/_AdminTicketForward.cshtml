@using Nafed.MicroPay.Model
@model Ticket
<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">       
        <h4>Assign Ticket</h4> <h5>(<b>Ticket No. </b>- @Model.ID,<b> Subject </b>- @Model.subject)</h5>
    </div>
</div>
<hr />

<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">

        @using (Ajax.BeginForm("Assign", "Ticket", new AjaxOptions() { HttpMethod = "POST", OnSuccess = "onSuccessFile" },new { id = "submitform" }))
        {
            @Html.AntiForgeryToken()
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="row">
                        <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12 mb-2">
                            @Html.HiddenFor(model => model.ID)
                            @Html.HiddenFor(model => model.subject)   
                            @Html.HiddenFor(model => model.customer_id)
                        @*@Html.HiddenFor(model => model.agent_id)*@
                                                 
                            @Html.Label("Department", htmlAttributes: new { @class = "control-label required" })
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12 mb-2">
                            @Html.DropDownListFor(model => model.DepartmentID, new SelectList(ViewBag.Department, "id", "value"), "Select", new { @class = "custom-select", @onchange = "BindEmployeeOnDepartment(this)" })
                            @Html.ValidationMessage("DepartmentModelError", "", new { @class = "text-danger" })
                            <span id="ReceiverDepartmentError"></span>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12 mb-2">
                            @Html.Label("Assign To", htmlAttributes: new { @class = "control-label required" })
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12 mb-2">
                            @Html.DropDownListFor(model => model.agent_id, (IEnumerable<SelectListItem>)ViewBag.Employee, new { @class = "custom-select" })

                                @Html.ValidationMessage("EmployeeModelError", "", new { @class = "text-danger" })
                                <span id="EmployeeError"></span>

</div>
                    </div>
                    
                    <div class="row">
                        <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12 mb-2">
                            @Html.Label("Remarks", htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-lg-8 col-md-8 col-sm-8 col-xs-12 mb-2">
                            @Html.TextAreaFor(model => model.Message, htmlAttributes: new { @class = "form-control", @maxlength = "1000", @cols = "60", @rows = "6", @style = "min-height:80px;max-height:80px;" })
                            @Html.ValidationMessage("RemarkModelError", "", new { @class = "text-danger" })
                            <span id="RemarkError"></span>

                        </div>
                    </div>                    
                </div>
            </div>

            <div class="form-group">
                <span class="pull-right">
                    <input type="submit" value="Assign" id="btnSubmit" class="btn btn-info btn-md pull-center toggle-tooltip" />
                </span>
            </div>
        }
    </div>
</div>

<script type="text/javascript">

    $('.toggle-tooltip').tooltip();


    function onSuccessFile(data) {
        debugger;      
        if (data.status == 1) {
            $("#div-forward").modal("hide");
            commonMessage(data.type, data.msg);
            window.location.reload();
        }
        else if(data.status==0)
        {
            $("#div-forward-body").html(data.htmlData);

        }
    }


    function BindEmployeeOnDepartment(e) {
        debugger;
        if ($("#DepartmentID").val() != "") {
            var departmentId = 0;
            departmentId = $("#DepartmentID").val();

            $("#agent_id").html("");
            $("#ReceiverDepartmentError").html("");
            if (departmentId > 0) {
                jQuery.post("@Url.Action("GetEmployeeByDepartment", "Ticket")", {
                departmentID: departmentId
            }).done(function (data) {

                if (data.employees != "") {
                    $("#agent_id").html("");
                    $.each(data.employees, function (key, value) {
                        $("#agent_id").append($("<option></option>").val(value.Value).html(value.Text));
                    });
                }
            });
        } else {
                $("#agent_id").append($("<option></option>").val(0).html('Select'));
        }
    }
    else {
            if ($("#agent_id").val() == "" || $("#agent_id").val() == "0") {
        $("#ReceiverDepartmentError").html("Please select Department").css("color", "red");
    }
    }
    }


</script>



